INCLUDE "hardware.inc"

 ;Memory Functions should go in this section.
 ;If any of these are ununsed, they should be commented out to save space.

SECTION "memoryFunctions", ROM0  
;-------------------------------------
; memcopy( *DE, *BC, *HL) - Copies size DE from address BC to address HL
;  Destroys DE, BC, HL, AF
;  DE = block size
;  BC = source address
;  HL = destination address
;  dec DE
; ------------------------------------
memcpy::  
.memcpy_loop:
    ld A, [BC]
    ld [HL], A
    inc BC
    inc HL
    dec DE
  
.memcpy_check_limit:
    ld A, E
    cp $00
    jr nz, .memcpy_loop     
    ld A, D
    cp $00
    jr nz, .memcpy_loop
    ret

;-----------------------------
;MemFill(B, *DE, *HL) - Fills size of DE at address HL with value of B
;Destroys DE, HL, AF 
; B = value to fill
; DE = Block size
; HL = destination address
;-----------------------------
memfill:: 
    
.memfill_loop:
    ld [HL], B
    inc HL
    dec DE

.memfill_check:
    ld A, E
    cp $00
    jr nz, .memfill_loop     
    ld A, D
    cp $00
    jr nz, .memfill_loop
    ret  



SECTION "OAM DMA routine", ROM0
;-----------------------------
;CopyDMARoutine() - Moves defined DMARoutine Function to hOAMDMA location in memory, i.e. from ROM to HRAM area 
;Destroys HL, BC, AF
;Note that this does not run DMA, it only initializes the DMA routine. To run DMACopy, call hOAMDMA 
;-----------------------------
CopyDMARoutine::
  ld  hl, DMARoutine ;; set location of DMA routine to hl
  ld  b, DMARoutineEnd - DMARoutine ; Number of bytes to copy
  ld  c, LOW(hOAMDMA) ; Low byte of the destination address
.copy ; moves DMARoutine to hOAMDMA in HRAM
  ld  a, [hli]
  ldh [c], a
  inc c
  dec b
  jr  nz, .copy
  ret

;This Code should never be called from this location in ROM. it exists to be copied to HRAM
DMARoutine:
  ldh [rDMA], a ;;writing to this register will start the dma tranfser
  ld  a, 40  ;set the value to wait for
.wait
  dec a   ; 1 cycle
  jr  nz, .wait ;3 cycles
  ret ; after 40 times (40 * 4 cycles = 160 cycles) return
DMARoutineEnd:

;; This defines a section in HRAM to store the OAM DMA transfer function
SECTION "OAM DMA", HRAM
;-----------------------------
;hOAMDMA(a) - DMA Transfer from "XX00 -XX9F" to "FE00 -FE9F", where XX is value of A register 
;Destroys AF
;Takes 160 Cycles
;-----------------------------
hOAMDMA::
  ds DMARoutineEnd - DMARoutine ; Reserve space in HRAM to copy the routine to
